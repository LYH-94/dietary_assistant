<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--
    targetRuntime 屬性：執行生成的逆向工程的版本。
        MyBatis3Simple：生成基本的 CRUD (簡易版)。
            只有五個方法，即增、刪、改、查所有、根據id查一條。
        MyBatis3：生成帶條件的 CRUD (進階版)。
    -->
    <context id="DB2Tables" targetRuntime="MyBatis3">
        <!-- 數據庫的連接訊息。 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/dietary_assistant_db?serverTimezone=UTC"
                        userId="root"
                        password="abc123">
            <!--
                 如果不是使用標準的數據庫表命名格式，就有可能出現數據庫中的表被多次生成的情況：
                 設置 nullCatalogMeansCurrent 來解決 MySQL8.0 以後重複生成表的問題。
            -->
            <property name="nullCatalogMeansCurrent" value="true" />
        </jdbcConnection>

        <!-- javaBean 的生成策略。 -->
        <javaModelGenerator targetPackage="com.lyh.dietary_assistant.pojo"
                            targetProject=".\src\main\java">
            <!-- enableSubPackages 若為 false，則 targetPackage 代表的就是一個目錄而已。 -->
            <property name="enableSubPackages" value="true" />
            <!-- 根據字段生成屬性，因此 trimStrings 可以將字段的前後空格去掉。 -->
            <property name="trimStrings" value="true" />
            <!-- 允許覆蓋現有文件。 -->
            <property name="overwrite" value="true"/>
        </javaModelGenerator>

        <!-- SQL 映射配置文件的生成策略。 -->
        <sqlMapGenerator targetPackage="com.lyh.dietary_assistant.mapper"
                         targetProject=".\src\main\resources">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!-- Mapper 介面的生成策略。 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="com.lyh.dietary_assistant.mapper"
                             targetProject=".\src\main\java">
            <property name="enableSubPackages" value="true" />
            <property name="overwrite" value="true"/>
        </javaClientGenerator>

        <!-- 逆向分析的表。 -->
        <!-- tableName 設置為 * 號，可以對應所有表，此時不寫 domainObjectName。 -->
        <!-- domainObjectName 屬性指定生成出來的實體類的類型。 -->
        <!-- 會自動根據實體類的名稱 + Mapper 作為 Mapper 介面與映射配置文件的名稱不需要自己設置。 -->
        <table tableName="t_body_composition_data" domainObjectName="BodyCompositionData"/>
        <table tableName="t_diet_diary" domainObjectName="DietDiary"/>
        <table tableName="t_food" domainObjectName="Food"/>
        <table tableName="t_user" domainObjectName="User"/>
        <table tableName="t_user_info" domainObjectName="UserInfo"/>
    </context>
</generatorConfiguration>