<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 1.掃描控制層組件以外的其它組件 -->
    <context:component-scan base-package="com.lyh.dietary_assistant">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 2.引入資源文件 (property-placeholder) 並配置數據源 (dataSource) -->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- 3.1.集成 MyBatis：配置 mybatis-spring 中的 sqlSessionFactoryBean -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 配置數據源 -->
        <property name="dataSource" ref="dataSource"></property>

        <!-- 設置 MyBatis 的核心配置文件的路徑 -->
        <!--
            如果不想要 MyBatis 的核心配置文件，也可以在這個 bean 中設置 MyBatis 所需要的配置，
            如此一來 mybatis-config.xml 文件就可以不要了 (習慣用哪種就用哪種)
            (XML文件只是一個載體)
        -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>

        <!-- 在這個 bean 中設置的話如下：包括但不限於以下幾個配置 -->
        <!-- 設置數據源 -->
        <!-- <property name="dataSource" ref="dataSource"></property> -->
        <!-- 設置類型別所對應的包 -->
        <!-- <property name="typeAliasesPackage" value="com.lyh.dietary_assistant.pojo"></property> -->
        <!-- 設置映射文件的路徑，只有映射文件的包和 mapper 介面的包名稱不一致時才需要設置。 -->
        <!-- <property name="mapperLocations" value="classpath:mappers/*.xml"></property> -->
    </bean>

    <!-- 3.2.配置 mapper 介面的掃瞄。可以將指定包下的所有 mapper 介面，通過 sqlSession 創建代理實現類物件，
             並將這些物件交給 IoC 容器管理，也就可以透過自動裝配來獲取 mapper 介面的物件並進行 SQL 操作。 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.lyh.dietary_assistant.mapper"></property>
    </bean>

    <!-- 4.配置事務管理器 (DataSourceTransactionManager)，並啟用事務的註解驅動。 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 啟用事務的註解驅動：將使用註解 @Transactional 標示的方法或類中所有的方法進行事務管理。 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>