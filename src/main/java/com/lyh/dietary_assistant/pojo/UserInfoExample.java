package com.lyh.dietary_assistant.pojo;

import java.util.ArrayList;
import java.util.List;

public class UserInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    public UserInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andOwnerIsNull() {
            addCriterion("owner is null");
            return (Criteria) this;
        }

        public Criteria andOwnerIsNotNull() {
            addCriterion("owner is not null");
            return (Criteria) this;
        }

        public Criteria andOwnerEqualTo(Integer value) {
            addCriterion("owner =", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerNotEqualTo(Integer value) {
            addCriterion("owner <>", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerGreaterThan(Integer value) {
            addCriterion("owner >", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerGreaterThanOrEqualTo(Integer value) {
            addCriterion("owner >=", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerLessThan(Integer value) {
            addCriterion("owner <", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerLessThanOrEqualTo(Integer value) {
            addCriterion("owner <=", value, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerIn(List<Integer> values) {
            addCriterion("owner in", values, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerNotIn(List<Integer> values) {
            addCriterion("owner not in", values, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerBetween(Integer value1, Integer value2) {
            addCriterion("owner between", value1, value2, "owner");
            return (Criteria) this;
        }

        public Criteria andOwnerNotBetween(Integer value1, Integer value2) {
            addCriterion("owner not between", value1, value2, "owner");
            return (Criteria) this;
        }

        public Criteria andNicknameIsNull() {
            addCriterion("nickName is null");
            return (Criteria) this;
        }

        public Criteria andNicknameIsNotNull() {
            addCriterion("nickName is not null");
            return (Criteria) this;
        }

        public Criteria andNicknameEqualTo(String value) {
            addCriterion("nickName =", value, "nickname");
            return (Criteria) this;
        }

        public Criteria andNicknameNotEqualTo(String value) {
            addCriterion("nickName <>", value, "nickname");
            return (Criteria) this;
        }

        public Criteria andNicknameGreaterThan(String value) {
            addCriterion("nickName >", value, "nickname");
            return (Criteria) this;
        }

        public Criteria andNicknameGreaterThanOrEqualTo(String value) {
            addCriterion("nickName >=", value, "nickname");
            return (Criteria) this;
        }

        public Criteria andNicknameLessThan(String value) {
            addCriterion("nickName <", value, "nickname");
            return (Criteria) this;
        }

        public Criteria andNicknameLessThanOrEqualTo(String value) {
            addCriterion("nickName <=", value, "nickname");
            return (Criteria) this;
        }

        public Criteria andNicknameLike(String value) {
            addCriterion("nickName like", value, "nickname");
            return (Criteria) this;
        }

        public Criteria andNicknameNotLike(String value) {
            addCriterion("nickName not like", value, "nickname");
            return (Criteria) this;
        }

        public Criteria andNicknameIn(List<String> values) {
            addCriterion("nickName in", values, "nickname");
            return (Criteria) this;
        }

        public Criteria andNicknameNotIn(List<String> values) {
            addCriterion("nickName not in", values, "nickname");
            return (Criteria) this;
        }

        public Criteria andNicknameBetween(String value1, String value2) {
            addCriterion("nickName between", value1, value2, "nickname");
            return (Criteria) this;
        }

        public Criteria andNicknameNotBetween(String value1, String value2) {
            addCriterion("nickName not between", value1, value2, "nickname");
            return (Criteria) this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("email is null");
            return (Criteria) this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("email is not null");
            return (Criteria) this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("email =", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("email <>", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("email >", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("email >=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("email <", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("email <=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("email like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("email not like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailIn(List<String> values) {
            addCriterion("email in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotIn(List<String> values) {
            addCriterion("email not in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("email between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("email not between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andTargetcaloriesIsNull() {
            addCriterion("targetCalories is null");
            return (Criteria) this;
        }

        public Criteria andTargetcaloriesIsNotNull() {
            addCriterion("targetCalories is not null");
            return (Criteria) this;
        }

        public Criteria andTargetcaloriesEqualTo(Short value) {
            addCriterion("targetCalories =", value, "targetcalories");
            return (Criteria) this;
        }

        public Criteria andTargetcaloriesNotEqualTo(Short value) {
            addCriterion("targetCalories <>", value, "targetcalories");
            return (Criteria) this;
        }

        public Criteria andTargetcaloriesGreaterThan(Short value) {
            addCriterion("targetCalories >", value, "targetcalories");
            return (Criteria) this;
        }

        public Criteria andTargetcaloriesGreaterThanOrEqualTo(Short value) {
            addCriterion("targetCalories >=", value, "targetcalories");
            return (Criteria) this;
        }

        public Criteria andTargetcaloriesLessThan(Short value) {
            addCriterion("targetCalories <", value, "targetcalories");
            return (Criteria) this;
        }

        public Criteria andTargetcaloriesLessThanOrEqualTo(Short value) {
            addCriterion("targetCalories <=", value, "targetcalories");
            return (Criteria) this;
        }

        public Criteria andTargetcaloriesIn(List<Short> values) {
            addCriterion("targetCalories in", values, "targetcalories");
            return (Criteria) this;
        }

        public Criteria andTargetcaloriesNotIn(List<Short> values) {
            addCriterion("targetCalories not in", values, "targetcalories");
            return (Criteria) this;
        }

        public Criteria andTargetcaloriesBetween(Short value1, Short value2) {
            addCriterion("targetCalories between", value1, value2, "targetcalories");
            return (Criteria) this;
        }

        public Criteria andTargetcaloriesNotBetween(Short value1, Short value2) {
            addCriterion("targetCalories not between", value1, value2, "targetcalories");
            return (Criteria) this;
        }

        public Criteria andCarbohydrateratioIsNull() {
            addCriterion("carbohydrateRatio is null");
            return (Criteria) this;
        }

        public Criteria andCarbohydrateratioIsNotNull() {
            addCriterion("carbohydrateRatio is not null");
            return (Criteria) this;
        }

        public Criteria andCarbohydrateratioEqualTo(Byte value) {
            addCriterion("carbohydrateRatio =", value, "carbohydrateratio");
            return (Criteria) this;
        }

        public Criteria andCarbohydrateratioNotEqualTo(Byte value) {
            addCriterion("carbohydrateRatio <>", value, "carbohydrateratio");
            return (Criteria) this;
        }

        public Criteria andCarbohydrateratioGreaterThan(Byte value) {
            addCriterion("carbohydrateRatio >", value, "carbohydrateratio");
            return (Criteria) this;
        }

        public Criteria andCarbohydrateratioGreaterThanOrEqualTo(Byte value) {
            addCriterion("carbohydrateRatio >=", value, "carbohydrateratio");
            return (Criteria) this;
        }

        public Criteria andCarbohydrateratioLessThan(Byte value) {
            addCriterion("carbohydrateRatio <", value, "carbohydrateratio");
            return (Criteria) this;
        }

        public Criteria andCarbohydrateratioLessThanOrEqualTo(Byte value) {
            addCriterion("carbohydrateRatio <=", value, "carbohydrateratio");
            return (Criteria) this;
        }

        public Criteria andCarbohydrateratioIn(List<Byte> values) {
            addCriterion("carbohydrateRatio in", values, "carbohydrateratio");
            return (Criteria) this;
        }

        public Criteria andCarbohydrateratioNotIn(List<Byte> values) {
            addCriterion("carbohydrateRatio not in", values, "carbohydrateratio");
            return (Criteria) this;
        }

        public Criteria andCarbohydrateratioBetween(Byte value1, Byte value2) {
            addCriterion("carbohydrateRatio between", value1, value2, "carbohydrateratio");
            return (Criteria) this;
        }

        public Criteria andCarbohydrateratioNotBetween(Byte value1, Byte value2) {
            addCriterion("carbohydrateRatio not between", value1, value2, "carbohydrateratio");
            return (Criteria) this;
        }

        public Criteria andFatratioIsNull() {
            addCriterion("fatRatio is null");
            return (Criteria) this;
        }

        public Criteria andFatratioIsNotNull() {
            addCriterion("fatRatio is not null");
            return (Criteria) this;
        }

        public Criteria andFatratioEqualTo(Byte value) {
            addCriterion("fatRatio =", value, "fatratio");
            return (Criteria) this;
        }

        public Criteria andFatratioNotEqualTo(Byte value) {
            addCriterion("fatRatio <>", value, "fatratio");
            return (Criteria) this;
        }

        public Criteria andFatratioGreaterThan(Byte value) {
            addCriterion("fatRatio >", value, "fatratio");
            return (Criteria) this;
        }

        public Criteria andFatratioGreaterThanOrEqualTo(Byte value) {
            addCriterion("fatRatio >=", value, "fatratio");
            return (Criteria) this;
        }

        public Criteria andFatratioLessThan(Byte value) {
            addCriterion("fatRatio <", value, "fatratio");
            return (Criteria) this;
        }

        public Criteria andFatratioLessThanOrEqualTo(Byte value) {
            addCriterion("fatRatio <=", value, "fatratio");
            return (Criteria) this;
        }

        public Criteria andFatratioIn(List<Byte> values) {
            addCriterion("fatRatio in", values, "fatratio");
            return (Criteria) this;
        }

        public Criteria andFatratioNotIn(List<Byte> values) {
            addCriterion("fatRatio not in", values, "fatratio");
            return (Criteria) this;
        }

        public Criteria andFatratioBetween(Byte value1, Byte value2) {
            addCriterion("fatRatio between", value1, value2, "fatratio");
            return (Criteria) this;
        }

        public Criteria andFatratioNotBetween(Byte value1, Byte value2) {
            addCriterion("fatRatio not between", value1, value2, "fatratio");
            return (Criteria) this;
        }

        public Criteria andProteinratioIsNull() {
            addCriterion("proteinRatio is null");
            return (Criteria) this;
        }

        public Criteria andProteinratioIsNotNull() {
            addCriterion("proteinRatio is not null");
            return (Criteria) this;
        }

        public Criteria andProteinratioEqualTo(Byte value) {
            addCriterion("proteinRatio =", value, "proteinratio");
            return (Criteria) this;
        }

        public Criteria andProteinratioNotEqualTo(Byte value) {
            addCriterion("proteinRatio <>", value, "proteinratio");
            return (Criteria) this;
        }

        public Criteria andProteinratioGreaterThan(Byte value) {
            addCriterion("proteinRatio >", value, "proteinratio");
            return (Criteria) this;
        }

        public Criteria andProteinratioGreaterThanOrEqualTo(Byte value) {
            addCriterion("proteinRatio >=", value, "proteinratio");
            return (Criteria) this;
        }

        public Criteria andProteinratioLessThan(Byte value) {
            addCriterion("proteinRatio <", value, "proteinratio");
            return (Criteria) this;
        }

        public Criteria andProteinratioLessThanOrEqualTo(Byte value) {
            addCriterion("proteinRatio <=", value, "proteinratio");
            return (Criteria) this;
        }

        public Criteria andProteinratioIn(List<Byte> values) {
            addCriterion("proteinRatio in", values, "proteinratio");
            return (Criteria) this;
        }

        public Criteria andProteinratioNotIn(List<Byte> values) {
            addCriterion("proteinRatio not in", values, "proteinratio");
            return (Criteria) this;
        }

        public Criteria andProteinratioBetween(Byte value1, Byte value2) {
            addCriterion("proteinRatio between", value1, value2, "proteinratio");
            return (Criteria) this;
        }

        public Criteria andProteinratioNotBetween(Byte value1, Byte value2) {
            addCriterion("proteinRatio not between", value1, value2, "proteinratio");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_info
     *
     * @mbggenerated do_not_delete_during_merge Tue Jul 30 20:26:00 CST 2024
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_info
     *
     * @mbggenerated Tue Jul 30 20:26:00 CST 2024
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}